/* Part 1: CSS Animations & Transitions */

/* Smooth button hover */
button {
  background: #4cafef;
  color: white;
  padding: 12px 20px;
  border: none;
  cursor: pointer;
  transition: transform 0.3s ease, background 0.3s ease;
}
button:hover {
  transform: scale(1.1);
  background: #3a9fd6;
}

/* Fade in a box on load */
.fade-in {
  opacity: 0;
  animation: fadeIn 2s forwards;
}
@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

/* Continuous pulse effect */
.pulse {
  animation: pulse 1.5s infinite;
}
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

// Part 2: Functions, Scope, Parameters & Return Values

// Global variable
let animationCount = 0;

// Function to log animation trigger count (demonstrates scope)
function updateCount() {
  animationCount++;
  console.log(`Animations triggered: ${animationCount}`);
}

// Function that takes parameters and returns a new class name
function getAnimationClass(animationType) {
  if (animationType === "fade") return "fade-in";
  if (animationType === "pulse") return "pulse";
  return "";
}

// Reusable function to add animation to any element
function animateElement(elementId, animationType) {
  const el = document.getElementById(elementId);
  const animationClass = getAnimationClass(animationType);

  if (animationClass) {
    el.classList.add(animationClass);
    updateCount(); // Update global counter
  }
}

